@using WebApp.DTO
@{
    Layout = null;
}
<!DOCTYPE html>
<html>

<head>
    <meta charset='utf-8' />
    <script src='/FullCalendar/dist/index.global.js'></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const faultDetails = JSON.parse('@Html.Raw(ViewData["FaultDetails"])');
            const faultViewModel = JSON.parse('@Html.Raw(ViewData["FaultViewModel"])');

            // Dropdown menüleri dolduruyoruz
            const productSelect = document.getElementById('product-select');
            faultViewModel.ProductList.forEach(product => {
                const option = document.createElement('option');
                option.value = product.ProductId;
                option.text = product.ProductName;
                productSelect.appendChild(option);
            });

            const statusSelect = document.getElementById('event-type');
            faultViewModel.StatusListStrings.forEach(status => {
                const option = document.createElement('option');
                option.value = status;
                option.text = status;
                statusSelect.appendChild(option);
            });

            const calendarEl = document.getElementById('calendar');
            const calendar = new FullCalendar.Calendar(calendarEl, {
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'
                },
                initialView: 'timeGridWeek',
                timeZone: 'local',
                editable: true,
                locale: 'tr',
                events: "/Fault/FullCalendarEvents",
                eventClick: function (info) {
                    alert('Event ID: ' + info.event.extendedProps.faultId + '\n' +
                        'Customer: ' + info.event.extendedProps.customerName + '\n' +
                        'Product: ' + info.event.extendedProps.productName + '\n' +
                        'Description: ' + info.event.extendedProps.description);
                }
            });
            calendar.render();

            // "Add Event" butonuna tıklanınca yeni etkinliği ekleme işlemi
            document.getElementById('add-event-button').addEventListener('click', function () {
                const eventType = document.getElementById('event-type').value;
                const productId = document.getElementById('product-select').value;
                const duration = document.getElementById('duration').value || 30;  // Varsayılan 30 dakika
                const startDate = document.getElementById('start-datetime').value;
                const customerId = document.getElementById('customer-id').value;

                // JSON formatında veri hazırlama
                const eventData = {
                    Status: eventType,
                    ProductId: productId,
                    Duration: duration,
                    StartDate: startDate,
                    CustomerId: customerId
                };

                // `AddFC` metoduna AJAX ile veri gönderme
                $.ajax({
                    url: '/Fault/AddFC', // Gerekli route'u burada belirtin
                    method: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(eventData),
                    success: function (response) {
                        if (response.success) {
                            // Başarılı işlem sonrası alanları sıfırlama ve takvimi yenileme
                            document.getElementById('event-type').value = '';
                            document.getElementById('product-select').value = '';
                            document.getElementById('duration').value = '';
                            document.getElementById('start-datetime').value = '';
                            calendar.refetchEvents();
                        } else {
                            alert('Etkinlik eklenemedi. Hata: ' + response.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        // Sunucudan dönen hata mesajını (eğer varsa) alır ve gösterir
                        let errorMessage = 'Bir hata oluştu. Lütfen tekrar deneyin.';
                        if (xhr.responseJSON && xhr.responseJSON.message) {
                            errorMessage = 'Hata: ' + xhr.responseJSON.message;
                        } else if (xhr.responseText) {
                            errorMessage = 'Hata: ' + xhr.responseText;
                        }
                        alert(errorMessage);
                        console.error('Hata detayları:', xhr, status, error);
                    }
                });
            });
        });
    </script>


    <style>
        body {
            margin: 0;
            font-size: 14px;
            font-family: Arial, Helvetica Neue, Helvetica, sans-serif;
            display: flex;
            justify-content: center;
            align-items: flex-start;
            height: 100vh;
        }

        #wrap {
            display: flex;
            width: 90%;
        }

        #external-events {
            width: 150px;
            padding: 10px;
            border: 1px solid #ccc;
            background: #eee;
            text-align: left;
            margin-right: 20px;
        }

        #external-events h4 {
            font-size: 16px;
            margin-top: 0;
            padding-top: 1em;
        }

        #external-events p {
            margin: 1.5em 0;
            font-size: 11px;
            color: #666;
        }

        #external-events p input {
            margin: 0;
            vertical-align: middle;
        }

        #calendar-wrap {
            flex: 1;
        }

        #calendar {
            max-width: 100%;
            margin: 0 auto;
        }

        .form-group {
            margin-bottom: 10px;
        }

        .form-group label {
            display: block;
            font-size: 12px;
            margin-bottom: 4px;
        }

        .form-group input,
        .form-group select {
            width: 100%;
            padding: 5px;
            font-size: 14px;
        }

        #add-event-button {
            display: block;
            width: 100%;
            padding: 10px;
            margin-top: 10px;
            text-align: center;
            background-color: #007bff;
            color: white;
            cursor: pointer;
            border: none;
            border-radius: 4px;
        }
    </style>
</head>

<body>
    <div id='wrap'>
        <div id="external-events">
            <h4>Teknik Destek Detayları</h4>

            <div class="form-group">
                <label for="event-type">Teknik Destek Tipi @ViewBag.Customer</label>
                <select id="event-type">
                </select>
            </div>

            <div class="form-group">
                <label for="product-select">Ürün Seçin</label>
                <select id="product-select">
                    <!-- Ürün seçenekleri buraya eklenecek -->
                </select>
            </div>

            <div class="form-group">
                <label for="duration">Süre</label>
                <input type="number" id="duration" placeholder="Enter duration" />
            </div>

            <div class="form-group">
                <label for="start-datetime">Tarih</label>
                <input type="datetime-local" id="start-datetime" />
            </div>

            <input type="hidden" id="customer-id" value="@ViewBag.Customer" />

            <button id="add-event-button">Ekle</button>
        </div>

        <div id='calendar-wrap'>
            <div id='calendar'></div>
        </div>
    </div>
</body>

</html>
