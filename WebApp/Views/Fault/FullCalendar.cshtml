@using WebApp.DTO
@{
    Layout = null;
}
<!DOCTYPE html>
<html>

<head>
    <meta charset='utf-8' />
    <script src='/FullCalendar/dist/index.global.js'></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
    <!-- Moment kütüphanesi eklendi -->
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // FaultDetails verisini alıyoruz
            const faultDetails = JSON.parse('@Html.Raw(ViewData["FaultDetails"])');

            // FaultViewModel verisini alıyoruz
            const faultViewModel = JSON.parse('@Html.Raw(ViewData["FaultViewModel"])');

            // Durumlara göre varsayılan süreler
            const defaultDurations = {
                "Kurulum": 75,
                "Bakim": 60,
                "Onarim": 90,
                "Ariza": 60
            };

            // Ürün listesini doldur
            const productSelect = document.getElementById('product-select');
            faultViewModel.ProductList.forEach(product => {
                const option = document.createElement('option');
                option.value = product.ProductId;
                option.text = product.ProductName;
                productSelect.appendChild(option);
            });

            // Status listesini doldur
            const statusSelect = document.getElementById('event-type');
            faultViewModel.StatusListStrings.forEach(status => {
                const option = document.createElement('option');
                option.value = status;
                option.text = status;
                statusSelect.appendChild(option);
            });

            // Varsayılan süreyi event türüne göre ayarla
            document.getElementById('event-type').addEventListener('change', function () {
                const selectedStatus = this.value;
                const durationField = document.getElementById('duration');

                // Eğer süre alanı boşsa seçilen duruma göre varsayılan süreyi ata
                if (!durationField.value) {
                    durationField.value = defaultDurations[selectedStatus] || 30; // Varsayılan süre 30 dakika
                }
            });

            // Takvimi başlat
            const calendarEl = document.getElementById('calendar');
            const calendar = new FullCalendar.Calendar(calendarEl, {
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'
                },
                initialView: 'timeGridWeek',
                editable: true,
                droppable: true,
                slotMinTime: "09:00:00",
                slotMaxTime: "18:00:00",
                slotDuration: "00:30:00",
                slotLabelInterval: "00:30:00",
                slotLabelFormat: {
                    hour: '2-digit',
                    minute: '2-digit',
                    hour12: false
                },
                events: faultDetails.map(fault => ({
                    title: fault.Status,
                    start: fault.StartDate,
                    end: fault.EndDate,
                    description: fault.Description,
                    extendedProps: {
                        customerName: fault.CustomerName,
                        productName: fault.ProductName,
                        faultId: fault.FaultId
                    }
                })),
                eventClick: function (info) {
                    alert('Event ID: ' + info.event.extendedProps.faultId + '\n' +
                        'Customer: ' + info.event.extendedProps.customerName + '\n' +
                        'Product: ' + info.event.extendedProps.productName + '\n' +
                        'Description: ' + info.event.extendedProps.description);
                }
            });
            calendar.render();

            // Dış etkinlikleri sürüklenebilir yap
            $('#external-events .fc-event').each(function () {
                const eventObj = {
                    title: $.trim($(this).text()),
                    description: $.trim($(this).text())
                };

                $(this).data('event', eventObj);
                $(this).draggable({
                    zIndex: 999,
                    helper: 'clone'
                });
            });

            // Etkinlik ekle butonu
            document.getElementById('add-event-button').addEventListener('click', function () {
                const eventType = document.getElementById('event-type').value;
                const duration = document.getElementById('duration').value || defaultDurations[eventType] || 30;
                const eventDuration = moment.duration(duration, 'minutes');

                const newEvent = {
                    title: eventType,
                    start: moment().toISOString(),
                    end: moment().add(eventDuration).toISOString(),
                    description: 'New event',
                    extendedProps: {
                        customerName: 'Unknown',
                        productName: 'Unknown Product',
                        faultId: 'N/A'
                    }
                };

                calendar.addEvent(newEvent);
            });
        });
    </script>

    <style>
        body {
            margin: 0;
            font-size: 14px;
            font-family: Arial, Helvetica Neue, Helvetica, sans-serif;
            display: flex;
            justify-content: center;
            align-items: flex-start;
            height: 100vh;
        }

        #wrap {
            display: flex;
            width: 90%;
        }

        #external-events {
            width: 150px;
            padding: 10px;
            border: 1px solid #ccc;
            background: #eee;
            text-align: left;
            margin-right: 20px;
        }

        #external-events h4 {
            font-size: 16px;
            margin-top: 0;
            padding-top: 1em;
        }

        #external-events p {
            margin: 1.5em 0;
            font-size: 11px;
            color: #666;
        }

        #external-events p input {
            margin: 0;
            vertical-align: middle;
        }

        #calendar-wrap {
            flex: 1;
        }

        #calendar {
            max-width: 100%;
            margin: 0 auto;
        }

        .form-group {
            margin-bottom: 10px;
        }

        .form-group label {
            display: block;
            font-size: 12px;
            margin-bottom: 4px;
        }

        .form-group input,
        .form-group select {
            width: 100%;
            padding: 5px;
            font-size: 14px;
        }

        #add-event-button {
            display: block;
            width: 100%;
            padding: 10px;
            margin-top: 10px;
            text-align: center;
            background-color: #007bff;
            color: white;
            cursor: pointer;
            border: none;
            border-radius: 4px;
        }
    </style>
</head>

<body>
    <div id='wrap'>
        <div id="external-events">
            <h4>Event Details</h4>

            <div class="form-group">
                <label for="event-type">Event Type</label>
                <select id="event-type">
                </select>
            </div>

            <div class="form-group">
                <label for="product-select">Product</label>
                <select id="product-select">
                    <!-- Ürün seçenekleri buraya eklenecek -->
                </select>
            </div>

            <div class="form-group">
                <label for="duration">Duration (mins)</label>
                <input type="number" id="duration" placeholder="Enter duration" />
            </div>

            <button id="add-event-button">Add Event</button>
        </div>

        <div id='calendar-wrap'>
            <div id='calendar'></div>
        </div>
    </div>
</body>

</html>
